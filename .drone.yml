workspace:
  base: /go/src
  path: github.com/go-ggz/ggz

clone:
  git:
    image: plugins/git
    depth: 50
    tags: true

pipeline:
  backend:
    image: golang:1.11
    pull: true
    group: testing
    commands:
      - cp .env.example .env
      - make embedmd
      - make fmt-check
      - make misspell-check

  vendor:
    image: golang:1.11
    pull: true
    group: testing
    commands:
      - make test-vendor

  test:
    image: golang:1.11
    group: testing
    pull: true
    environment:
      TAGS: bindata sqlite
    commands:
      - make unit-test-coverage

  generate-coverage:
    image: golang:1.11
    pull: true
    commands:
      - make coverage
    when:
      event: [ push, pull_request ]

  build_linux_amd64_with_go_module:
    image: golang:1.11
    pull: true
    environment:
      TAGS: sqlite
      GO111MODULE: "on"
    commands:
      - make clean
      - make install-module
      - make build_linux_amd64

  build_linux_amd64:
    image: golang:1.11
    pull: true
    group: build
    environment:
      TAGS: sqlite
    commands:
      - make build_linux_amd64

  build_linux_i386:
    image: golang:1.11
    pull: true
    group: build
    environment:
      TAGS: sqlite
    commands:
      - make build_linux_i386

  build_linux_arm64:
    image: golang:1.11
    pull: true
    group: build
    environment:
      TAGS: sqlite
    commands:
      - make build_linux_arm64

  build_linux_arm:
    image: golang:1.11
    pull: true
    group: build
    environment:
      TAGS: sqlite
    commands:
      - make build_linux_arm

  codecov:
    image: robertstettner/drone-codecov
    group: build
    secrets: [ codecov_token ]
    files:
      - coverage.all
    when:
      event: [ push, pull_request ]

  release:
    image: golang:1.11
    pull: true
    commands:
      - make release
    when:
      event: [ tag ]
      local: false

  release_tag:
    image: plugins/github-release
    secrets: [ github_release_api_key ]
    group: release
    files:
      - dist/release/*
    when:
      event: [ tag ]
      local: false

  publish_linux_amd64:
    image: plugins/docker
    group: release
    pull: true
    repo: goggz/ggz
    secrets: [ docker_username, docker_password ]
    default_tags: true
    when:
      event: [ push, tag ]
      local: false

  publish_alpine:
    image: plugins/docker
    group: release
    pull: true
    repo: goggz/ggz
    dockerfile: Dockerfile.alpine
    secrets: [ docker_username, docker_password ]
    default_tags: true
    default_suffix: alpine
    when:
      event: [ push, tag ]
      local: false

  publish_linux_i386:
    image: plugins/docker:17.05
    pull: true
    secrets: [ docker_username, docker_password ]
    group: release
    repo: goggz/ggz
    auto_tag: true
    auto_tag_suffix: i386
    dockerfile: Dockerfile.i386
    when:
      event: [ push, tag ]
      local: false

  publish_linux_arm64:
    image: plugins/docker:17.05
    pull: true
    secrets: [ docker_username, docker_password ]
    group: release
    repo: goggz/ggz
    auto_tag: true
    auto_tag_suffix: arm64
    dockerfile: Dockerfile.arm64
    when:
      event: [ push, tag ]
      local: false

  publish_linux_arm:
    image: plugins/docker:17.05
    pull: true
    secrets: [ docker_username, docker_password ]
    group: release
    repo: goggz/ggz
    auto_tag: true
    auto_tag_suffix: arm
    dockerfile: Dockerfile.arm
    when:
      event: [ push, tag ]
      local: false

  discord:
    image: appleboy/drone-discord
    pull: true
    secrets: [ discord_webhook_id, discord_webhook_token ]
    when:
      status: [ changed, failure ]

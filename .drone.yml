workspace:
  base: /go/src
  path: github.com/go-ggz/ggz

clone:
  git:
    image: plugins/git
    depth: 50
    tags: true

pipeline:
  backend:
    image: appleboy/golang-testing:1.9
    group: testing
    commands:
      - cp .env.example .env
      - make embedmd
      - make fmt-check
      - make misspell-check
      # - make stylesheets-check

  vendor:
    image: appleboy/golang-testing:1.9
    group: testing
    commands:
      - make test-vendor

  test:
    image: appleboy/golang-testing:1.9
    group: testing
    commands:
      - coverage all

  build:
    image: appleboy/golang-testing:1.9
    group: build
    commands:
      - make docker_build
      - make upx
      - make tar

  codecov:
    image: robertstettner/drone-codecov
    group: build
    secrets: [ codecov_token ]
    files:
      - .cover/coverage.txt
    when:
      event: [ push, pull_request ]

  publish_server:
    image: plugins/docker
    repo: goggz/ggz
    tags: [ 'latest' ]
    secrets: [ docker_username, docker_password ]
    when:
      event: push
      branch: master
      local: false

  publish_server_alpine:
    image: plugins/docker
    repo: goggz/ggz
    dockerfile: Dockerfile.alpine
    secrets: [ docker_username, docker_password ]
    tag: [ alpine ]
    when:
      branch: master
      event: push
      local: false

  discord:
    image: appleboy/drone-discord
    pull: true
    secrets: [ discord_webhook_id, discord_webhook_token ]
    when:
      status: [ changed, failure ]
